usage=stowrs [options]  --url <stowURL> [<fileToBeStored>..][<filesInDirectoriesToBeStored>..]
try=Try `stowrs --help' for more information.
description=\n\
For DICOM files : Send multiple dicom files or directories containing DICOM files to STOW-RS receiver at a time. \n\
For metadata+bulkdata : Send multiple bulkdata files or directories containing bulkdata files to STOW-RS receiver at a time. \
DICOM attributes can be specified via command line (using -m option) or a XML file (using -f option) \
If both the options are specified, system will generate metadata first from sample metadata file then from \
file specified by user and lastly add the attributes specified individually on command line. The Type 1 and Type 2 attributes, \
if missing, will be generated by the system. Storing bulkdata files of various Content types in one request is not possible \
i.e for eg. one can send multiple pdfs in one request, but can not send combination of files like pdfs and images in one request. \
Supported content types for bulkdata are application/pdf, text/xml (for CDA files), image/jpeg, video/mpeg, video/mp4, \
video/quicktime, image/jp2, application/sla (for STL files), model/mtl (for MTL files) and model/obj (for OBJ files). \
File names shall not contain spaces. \n\-\n\
Options:
example=-\n\
Example: stowrs -m PatientName=John^Doe --url http://localhost/stow/studies img.jpeg \n\
=> Send stow request to stowRS Receiver with the attribute given and img.jpeg bulkData.\n\-\n\
Example: stowrs --url http://localhost/stow/studies[/{StudyInstanceUID}] object1.dcm object2.dcm \n\
=> Send stow request to stowRS Receiver with the given dicom files.\n\-\n\
Example: stowrs -t json -m StudyInstanceUID=1.2.3.4.5.6.7.8.9.10 --url http://localhost/stow/studies file1.pdf file2.pdf file3.pdf \n\
=> Send stow request to stowRS Receiver first generating metadata from etc/stowrs/encapsulatedPDFMetadata.xml and then adding \n\
given StudyInstanceUID for the 3 pdf files. \n\ 
accept=Specify the value for Accept header : xml or json. \
The value of Accept header will then be sent in request header as application/dicom+xml or application/dicom+json. \
Note that for DICOM objects application/dicom+xml will always be used by default. \
If this flag is absent, for bulkdata type of objects the value specified in -t option will be used to determine application/dicom+xml or application/dicom+json. \
If -t option is absent as well then application/dicom+xml will be used by default. 
file=Specify the file containing the metadata (in XML format).
metadata=Specify metadata attributes. attr can be specified by keyword or tag value \
(in hex), e.g. PatientName or 00100010. Attributes in nested Datasets can be \
specified by including the keyword/tag value of the sequence attribute, \
e.g. 00400275/00400009 for Scheduled Procedure Step ID in the Request.
no-app=Application segments APPn are to be excluded from JPEG stream. If absent JPEG stream verbatim encapsulated by default.
pixel-header=If this option is specified, then the metadata information shall be extracted from header of pixel data \
for jpeg images, mpeg, mp4 and quicktime videos in addition to the metadata generation as explained above in description.
xc=Send image files as VL Photographic images by generating sample metadata from etc/stowrs/vlPhotographicImageMetadata.xml file.
type=Specify the value for Content-type header : xml or json. \
The value of Content-type will then be sent in request header as application/dicom+xml or application/dicom+json. \
If this flag is absent, for bulkdata type of objects application/dicom+xml will be used by default. \
Note that for DICOM objects, tool will always send Content-type as application/dicom.
tsuid=Specify if the Transfer Syntax UID shall be sent in multipart request for content types image/jpeg, \
video/mpeg, video/mp4 or video/quicktime files.
url=Specify the request URL.
bulkdata-file-not-supported=File content type {0} not supported.
user=Specify the user name and password to use for server authentication.
bearer=Specify the bearer token to be used in Authorization header for server authentication.